VIDEO 23 - TEORIA/EJEMPLOS

    Autoload en POO con PHP
En lugar de tener que cargar cada una de las clases de nuestra
aplicacion manualmente, PODEMOS CREAR UN AUTOLOADER. Como su 
nombre lo indica, el autoloader esta destinado a CARGAR DE 
FORMA AUTOMATICA LAS CLASES

Cada vez que se intenta inicializar una clase y la clase no 
existe, EL NOMBRE DE ETA CLASE SE PASA AL AUTOLOADER Y ES 
EJECUTADO. En el autoloader podremos automatizar el proceso de
cargar SIN TENER QUE INCLUIR MANUALMENTE CADA ARCHIVO y ademas
nos permite hacer el codigo mas rapido, pues solo se cargaran
las clases que efectualmente se utilicen.

### ¿Por qué necesitamos un autoloader? ###
Imagina que tienes una aplicación con muchas clases diferentes.
Sin un autoloader, tendrías que hacer algo como esto:

require 'classes/Usuario.php';
require 'classes/Producto.php';
require 'classes/Orden.php';

// Usar las clases
$usuario = new Usuario();
$producto = new Producto();
$orden = new Orden();
Esto puede volverse muy complicado y propenso a errores a medida
que tu aplicación crece.

¿Cómo funciona un autoloader?
Un autoloader resuelve este problema cargando automáticamente la 
clase que necesitas en el momento en que la usas por primera vez.

#### ¿Como crearlo? ####
PASO 1_ Creamos un archivo en la raiz, en este caso dentro de la
        carpeta CRUD, llamado "autoload.php".

PASO 2_ En el archivo index.php lo incluimos el archivo creado en
        el paso anterior, con un requise_once.

PASO 3_ En autoload.php llamamos la funcion "spl_autoload_register"
        nativa de php, que esta funcion registra una funcion en php
        llamara automaticamente cada vez que intentes usar una clase
        que no ha sido definida aun.
        La funcion que le pasaremos a "spl_autoload_register", toma
        el nombre de la clase , y construye la ruta al archivo corres
        pondiente y lo incluye

PASO 4_ Creamos una variable archivo, donde guardaremos la direccion
        del archivo donde se encuentra la clase a utilizar


VIDEO 24 - TEORIA/EJEMPLOS

Creamos la plantilla PHP base del SISTEMA
donde crearemos dos archivos llamados head.php y script.php
donde el head.php tendra para finalidades practicas en la organizacion de carpetas
todo el contenido de head del html5

VIDEO 25 - TEORIA/EJEMPLOS

ARCHIVO de INICIO de SESION en PHP session_start()
Donde aqui crearemos el archivo session_start.php en la carpeta
inc ubicada en views, y incluiremos este archivo en el index.php despies
de todas las inclusiones de archivos, puesto que necesitamos la variable
APP_SESSION_NAME del archivo app.php

donde en el archivo session_start.php usaremos el siguiente para iniciar 
la sesion       session_name(APP_SESION_NAME);
                session_start();
Donde se creara una cookie de sesion en el navegador


VIDEO 26 -TEORIA/EJEMPLOS


VIDEO 27 - TEORIA/EJEMPLOS

Descargando el plugin SweetAlert2 para mostrar tarjetas de alerta.


VIDEO 28 TEORIA/EJEMPLOS

Creamos modelo y controlador de un modelo y controlador para las vistas
Como primer paso, en la carpeta models creamos el archivo viewsModel.php
donde haremos un namespace 

VIDEO 29 TEORIA/EJEMPLOS
Creamos y nombramos un modelo para la vista 

VIDEO 30 TEORIA/EJEMPLOS
Creamos y nombreamos un controlador para la vista

VIDEO 31 TEORIA/EJEMPLOS
¿Como APLICAR un MODELO y CONTROLADOR (MVC) en PHP?
En el archivo index.php usamos la clase viewsControllers 
donde la instanciamos una variable y le asiganamos la funcion
obtenerVistasControlador y le mandamos la variable URL con la posicion 0
donde url nos devolvia la direccion del archivo en que estamos parados
en forma de arreglo donde la pos 0 es login o un string con la ubicacion del archivo 

VIDEO 32 TEORIA/EJEMPLOS
Creamos barra de navegacion con TaildWind


VIDEO 33 TEORIA/EJEMPLOS
Creando VISTAS de LOGIN y 404 PAGINA NO ENCONTRADA

VIDEO 34 TEORIA/EJEMPLOS
¿Que es un MODELO PRINCIPAL en MVC con PHP?

